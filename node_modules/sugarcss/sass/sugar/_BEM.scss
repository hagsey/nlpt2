//
// BEM specific
//

//
// Block
//
@mixin s-Bem(
	$bem
) {
	$bem : _sugar-parse-properties($bem, (
		name : string,
		extend : true
	));
	$name : map-get($bem, name);
	$extend : map-get($bem, extend);

	@at-root {
		.#{$name} {
			@if $extend {
				@each $ext in $extend {
					@extend .#{$ext} !optional;
				}
			}
			@content;
		}
	}
}

//
// Block element
//
@mixin s-bEm(
	$bem
) {
	$bem : _sugar-parse-properties($bem, (
		name : string,
		extend : true,
		root : true
	), (
		name : n,
		extend : e,
		root : r
	));
	$name : map-get($bem, name);
	$extend : map-get($bem, extend);
	$root : map-get-or($bem, root, false);

	$separator : sugar('settings.BEM.element-separator');
	$this : #{&};
	@if $root {
		$this : '.';
		$separator : '';
	}
	@at-root {
		#{$this}#{$separator}#{$name} {
			@if $extend {
				@each $ext in $extend {
					@extend #{$this}#{$separator}#{$ext} !optional;
				}
			}
 			@content;
		}
	}
}

//
// Block modifier
//
@mixin s-beM(
	$bem
) {
	$bem : _sugar-parse-properties($bem, (
		name : string,
		extend : true,
		standelone : true
	), (
		name : n,
		extend : e,
		standelone : s
	));
	$name : map-get($bem, name);
	$extend : map-get($bem, extend);
	$standelone : map-get-or($bem, standelone, sugar('settings.BEM.standelone'));

	$separator : sugar('settings.BEM.modifier-separator');
	$this : #{&};
	@at-root {
		#{$this}#{$separator}#{$name} {
			@if $extend {
				@each $ext in $extend {
					@extend #{$this}#{$separator}#{$ext} !optional;
				}
			}
			@if $standelone {
				@extend #{$this} !optional;
			}
			@content;
		}
	}
}