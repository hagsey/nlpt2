//
// Images specific
//

//
// Image rendering
//
@mixin s-image-rendering (
	$mode:auto
) {
	@if ($mode == crisp-edges) {
		-ms-interpolation-mode: nearest-neighbor; // IE8+
		image-rendering: -moz-crisp-edges;
		image-rendering: -o-crisp-edges;
		image-rendering: -webkit-optimize-contrast;
		image-rendering: crisp-edges;
	}
	@else {
		image-rendering: $mode;
	}
}

//
// Background
//
@mixin s-background(
	$background
) {
	$background : _sugar-parse-properties($background, (
		repeat : repeat repeat-x repeat-y no-repeat,
		size : auto length cover contain initial inherit,
		attachment : scroll fixed local initial inherit,
		blend-mode : normal multiply screen overlay darken lighten color-dodge saturation color luminosity,
		clip : border-box padding-box content-box initial inherit,
		origin : padding-box border-box content-box initial inherit,
		url : string,
		width : number,
		height : number,
		top : number,
		left : number,
		x2 : string,
		x3 : string,
		x4 : string,
		position : true
	), (
		repeat : r,
		size : s,
		blend-mode : bm,
		origin : o,
		url : u,
		position : p,
		attachment : att,
		clip : cl
	));
	$background : _sugar-handle-nested(background, $background);

	// get values
	$repeat : map-get($background, repeat);
	$size : map-get($background, size);
	$attachment : map-get($background, attachment);
	$blend-mode : map-get($background, blend-mode);
	$clip : map-get($background, clip);
	$origin : map-get($background, origin);
	$url : map-get($background, url);
	$top : map-get($background, top);
	$left : map-get($background, left);
	$width : map-get($background, width);
	$height : map-get($background, height);
	$_2x : map-get-or($background, x2);
	@if $_2x == true { $_2x : '@2x'; }
	$_3x : map-get-or($background, x3);
	@if $_3x == true { $_3x : '@3x'; }
	$_4x : map-get-or($background, x4);
	@if $_4x == true { $_4x : '@4x'; }

	$position : map-get($background, position);

	// build background
	$back : ();
	@if $repeat {
		background-repeat: $repeat;
	}
	@if $size {
		background-size: $size;
	} @else {
		@if $height and $width == null {
			background-size: 0 $height;
		} @else if $height == null and $width {
			background-size: $width 0;
		} @else if $height and $width {
			background-size: $width $height
		}
	}
	@if $url {
		background-image: url("#{$url}");
	}
	@if $position {
		background-position: $position;
	} @else {
		@if $top and $left == null {
			background-position: 0 $top;
		} @else if $top == null and $left {
			background-position: $left 0;
		} @else if $top and $left {
			background-position: $left $top
		}
	}

	// resolutions
	$split : _split($url,'.');
	$name : nth($split, length($split)-1);
	@if $_2x and $url {
		$split : set-nth($split, length($split)-1, #{$name}#{$_2x});
		$url : _join($split, '.');
		@include s-media(2x) {
			background-image: url("#{$url}");
		}
	}
	@if $_3x and $url {
		$split : set-nth($split, length($split)-1, #{$name}#{$_3x});
		$url : _join($split, '.');
		@include s-media(3x) {
			background-image: url("#{$url}");
		}
	}
	@if $_4x and $url {
		$split : set-nth($split, length($split)-1, #{$name}#{$_4x});
		$url : _join($split, '.');
		@include s-media(4x) {
			background-image: url("#{$url}");
		}
	}
	@if $attachment {
		background-attachment : $attachment;
	}
	@if $blend-mode {
		background-blend-mode : $blend-mode;
	}
	@if $clip {
		background-clip : $clip;
	}
	@if $origin {
		background-origin : $origin;
	}

	// handle nested
	@include _sugar-handle-nested(background) {
		@content;
	}
}